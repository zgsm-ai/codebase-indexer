分析此仓库并为其创建Wiki结构。

1. 项目的完整文件树：
<file_tree>
{{.FileTree}}
</file_tree>

2. 项目的README文件：
<readme>
{{.ReadmeContent}}
</readme>

我想为这个仓库创建一个Wiki。根据仓库的内容确定Wiki的最逻辑结构。

重要：Wiki内容将使用{{.OutputLanguage}}语言生成。

在设计Wiki结构时，包含将受益于可视化图表的页面，例如：
- 架构概述
- 数据流描述
- 组件关系
- 流程工作流
- 状态机
- 类层次结构

创建一个包含以下主要章节的结构化Wiki：
- 概述（关于项目的一般信息）
- 系统架构（系统如何设计）
- 核心功能（关键功能）
- 数据管理/流：如果适用，数据如何存储、处理、访问和管理（例如，数据库模式、数据管道、状态管理）。
- 前端组件（UI元素，如果适用）
- 后端系统（服务器端组件）
- 模型集成（AI模型连接）
- 部署/基础设施（如何部署，基础设施是什么样的）
- 可扩展性和自定义：如果项目架构支持，解释如何扩展或自定义其功能（例如，插件、主题、自定义模块、钩子）。

每个章节应包含相关页面。例如，"前端组件"章节可能包括"主页"、"仓库Wiki页面"、"询问组件"等页面。

使用以下XML格式返回您的分析：

<document_structure>
  <title>[Wiki的总体标题]</title>
  <description>[仓库的简要描述]</description>
  <sections>
    <section id="[section-id]">
      <title>[章节标题]</title>
      <pages>
        <page_ref>[page-id]</page_ref>
        <page_ref>[page-id]</page_ref>
      </pages>
      <subsections>
        <section_ref>[section-id]</section_ref>
      </subsections>
    </section>
    <!-- 根据需要添加更多章节 -->
  </sections>
  <pages>
    <page id="[page-id]">
      <title>[页面标题]</title>
      <description>[此页面将涵盖内容的简要描述]</description>
      <importance>high|medium|low</importance>
      <relevant_files>
        <file_path>[相关文件的路径]</file_path>
        <!-- 根据需要添加更多文件路径 -->
      </relevant_files>
      <related_pages>
        <related>[page-id]</related>
        <!-- 根据需要添加更多相关页面ID -->
      </related_pages>
      <parent_section>[section-id]</parent_section>
    </page>
    <!-- 根据需要添加更多页面 -->
  </pages>
</wiki_structure>

使用以下XML格式返回您的分析：

<wiki_structure>
  <title>[Wiki的总体标题]</title>
  <description>[仓库的简要描述]</description>
  <sections>
    <section id="[section-id]">
      <title>[章节标题]</title>
      <pages>
        <page_ref>[page-id1]</page_ref>
        <page_ref>[page-id2]</page_ref>
      </pages>
      <subsections>
        <section_ref>[section-2]</section_ref>
      </subsections>
    </section>
    <!-- 根据需要添加更多章节 -->
  </sections>
  <pages>
    <page id="[page-id]">
      <title>[页面标题]</title>
      <description>[此页面将涵盖内容的简要描述]</description>
      <importance>high|medium|low</importance>
      <relevant_files>
        <file_path>[相关文件的路径]</file_path>
        <!-- 根据需要添加更多文件路径 -->
      </relevant_files>
      <related_pages>
        <related>[page-id]</related>
        <!-- 根据需要添加更多相关页面ID -->
      </related_pages>
      <parent_section>[section-id]</parent_section>
    </page>
    <!-- 根据需要添加更多页面 -->
  </pages>
</document_structure>

重要格式说明：
- 只返回上面指定的有效XML结构
- 不要将XML包装在markdown代码块中
- 不要在XML之前或之后包含任何解释文本
- 确保XML格式正确且有效
- 直接以<document_structure>开始，以</document_structure>结束

重要：
1. 创建{{.PageCount}}个页面，为这个仓库制作一个综合的Wiki文档
2. 每个页面应专注于代码库的特定方面（例如，架构、关键功能、设置）
3. relevant_files应该是仓库中实际用于生成该页面的文件
4. 只返回具有上述结构的有效XML，不包含markdown代码块分隔符